import "./remote_code.scss"

import React, { useState, useContext, useEffect } from "react";
import { EditorContext } from "../../pages/texteditor/texteditor"



const initialApiState = {
    apiStatus: undefined,
    apiOutput: undefined,
    apiStderr: undefined,
    responseStatus: undefined,
    // render: "not_been_run",
};

export function RemoteCodeApiRequest() {
    const  [apiState, set_apiState ] = useState(initialApiState);
    const  [render, set_render ] = useState("not_been_run");
    const { settings } = useContext(EditorContext);

    useEffect(() => {
        if (settings.compile !== 0){
            set_render("loading")
            
            const requestOptions = {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
	                "src": settings.value,
	                "stdin":"",
	                "lang": settings.mode,
	                "timeout":5
                })
            };
            fetch("http://127.0.0.1:7000/submit", requestOptions)
                .then(response => response.text())
                .then(data => {
                    let i = 0;
                    let foo = 0;
                        var interval = setInterval(function () {
                            i++
                            if ((( foo !== 200))  && (i < 100)){
                                fetch(data, {method: "GET"})
                                    .then(response => {
                                        foo = response.status;
                                        return response.text()
                                    })
                                    .then(data => JSON.parse(data))
                                    .then(data => {
                                        set_apiState({...apiState, apiStatus: data.status, apiOutput: data.output, apiStderr: data.stderr, responseStatus: foo})
                                    });
                            } else{
                                clearInterval(interval);
                            }
                        }, 5000);
                    })
            // eslint-disable-next-line
            }}, [settings.compile]);

    useEffect(() => {
        if (render === "not_been_run"){
            return;
        }
        else if ( apiState.responseStatus !== 200 ){
            set_render("gone_wrong")
        }
        else if ( apiState.apiOutput !== (undefined || "" )){
            set_render("result")
            console.log( apiState.responseStatus, apiState.apiOutput )
        }
        else if ( apiState.apiStderr === (undefined || "") ){
            set_render("error")
            // }
        }
    // eslint-disable-next-line
    },[apiState]);

    if (render === "not_been_run"){
        return(
        <div className="center">
            <p className="before-submit">Click submit code when you are ready</p>
        </div>
        );
    }
    else if (render === "loading"){
        return(
            <div className="center">
                {/* <img id="loading-svg" src={ Loading } alt="Loading" ></img> */}
                <svg width="651" height="252" xmlns="http://www.w3.org/2000/svg">
                    <path id="loading-svg" stroke-width="4" stroke="#fff" fill="none"  d="m104.5009,139.6661c0.44075,0 0.88379,-0.10148 3.52602,0c5.30278,0.20369 11.028,0.46834 17.6301,-0.40701c11.47671,-1.52165 18.22563,-3.19061 22.91914,-6.51231c4.21254,-2.98131 6.6942,-7.70356 8.3743,-11.80354c2.31902,-5.65911 3.74863,-11.41225 4.40752,-17.90883c0.66272,-6.53438 1.76301,-13.0246 2.64452,-19.9439c0.88151,-6.91932 1.98199,-12.96515 2.64451,-22.38603c0.2285,-3.24931 0.98818,-12.64806 1.76301,-18.31585c0.61721,-4.51477 1.11052,-8.98486 1.76301,-12.21056c0.33369,-1.64964 0.44075,-2.03509 0.44075,-1.62807c0,0.81403 -0.66079,2.83223 -0.88151,6.51229c-0.36561,6.09594 -0.45446,10.98867 -0.8815,17.09479c-0.45538,6.51144 -1.08661,12.21444 -1.32227,18.31584c-0.22051,5.70915 -1.7585,11.00615 -1.32225,15.87374c0.44226,4.93472 1.88351,9.34551 2.64452,14.65266c0.52394,3.65381 1.62833,7.35998 2.64451,10.58249c1.16906,3.70732 2.15172,6.1349 3.52603,8.14037c0.8498,1.24009 1.32225,1.62808 2.20376,1.62808c0.88151,0 2.5759,-1.28608 5.28903,-3.66317c4.30172,-3.7689 9.34308,-10.94719 12.78183,-17.09478c3.16617,-5.66029 6.41305,-11.60481 11.90031,-15.87373c5.61012,-4.36451 10.53054,-7.04667 16.7486,-8.95441c5.68911,-1.74546 12.78669,-2.26939 19.39311,-2.03509c5.74248,0.20365 11.97526,1.26308 17.63011,2.44211c4.48861,0.93586 5.79633,1.39795 6.61128,2.44212c0.2577,0.33018 -0.02982,0.02664 -0.88152,-0.81404c-3.20089,-3.15952 -7.91356,-6.997 -11.45955,-7.73335c-6.57797,-1.36595 -10.19139,-0.54979 -15.42635,1.22105c-4.4574,1.50782 -9.78952,4.37269 -14.10407,7.73335c-4.05694,3.16 -8.85162,6.56929 -13.66334,12.61758c-2.46182,3.09449 -4.62165,6.46917 -5.28903,9.76847c-0.65249,3.22568 -0.21827,7.80523 1.76301,12.61756c2.38579,5.79483 5.09792,11.02652 9.2558,15.46673c3.87862,4.14198 9.59317,6.77487 18.95235,9.76844c6.98145,2.23306 14.14557,3.27997 16.7486,2.84912c12.49126,-2.06753 13.73914,-8.44638 14.98558,-15.05969c1.51908,-8.05981 0.73376,-16.7254 -0.8815,-26.45621c-1.49331,-8.99614 -4.5079,-16.25062 -6.61128,-22.38603c-1.38888,-4.05122 -1.24457,-6.31438 -2.20376,-6.10528c-0.42895,0.09351 -0.37007,2.49644 0.44075,6.10528c1.21788,5.42062 4.43551,12.03896 8.3743,17.50182c4.00636,5.55657 9.84263,11.18148 22.03763,12.61756c4.37212,0.51485 11.08905,-1.91133 14.54483,-3.66317c4.50576,-2.28411 8.3743,-5.29123 11.90032,-8.54738c3.52603,-3.25616 5.73864,-7.59223 8.81504,-10.17548c2.18753,-1.83685 5.38574,-2.45675 10.57806,-1.22105c15.38878,3.66229 22.58766,6.95325 33.05646,9.76846c5.35279,1.43943 8.18965,1.86462 7.49278,1.22106c-0.69687,-0.64356 -8.64451,-5.69397 -17.18934,-8.5474c-9.9649,-3.32763 -21.6672,-6.03494 -31.29345,-4.88422c-7.3272,0.87589 -17.54749,6.50768 -20.71537,12.61758c-3.61143,6.9654 -3.80778,15.88806 -3.08526,25.64219c0.63452,8.56605 2.1556,16.10289 6.61128,20.75795c3.73816,3.90541 9.73274,5.56521 14.54483,4.88421c5.66368,-0.80153 13.5984,-3.96509 20.27462,-16.28073c6.05234,-11.16477 5.4853,-16.26543 6.17054,-24.82814c0.61803,-7.72303 0.94705,-14.70712 0.44075,-16.68777c-0.22642,-0.88578 -0.56121,-0.39939 -0.44075,0.40701c2.00217,13.403 6.81966,25.28952 7.93355,28.89832c2.56006,8.29424 13.15006,19.53446 17.18934,19.94392c4.81934,0.48854 9.16257,-1.71626 13.22259,-5.29125c4.74206,-4.17553 5.64614,-6.80295 15.8671,-21.97902c4.19642,-6.23083 7.41775,-12.4722 15.42633,-15.87372c3.69178,-1.56802 9.03019,-1.08974 13.22259,0.40701c4.79419,1.71161 9.32085,3.10308 11.0188,6.51231c0.18417,0.36979 0.13569,-0.17039 -2.20376,-1.62808c-6.70718,-4.17916 -15.51294,-9.36143 -25.56364,-9.36143c-10.05071,0 -12.90898,4.48227 -15.42635,14.65268c-2.16958,8.76526 0.10548,20.43916 3.52603,30.93341c3.21379,9.85988 12.30753,25.06831 17.63009,25.23515c3.76363,0.11798 6.37677,-5.27716 7.93355,-26.04918c1.52431,-20.33888 2.00887,-33.46494 -0.44075,-47.21419c-2.41381,-13.54831 -4.54161,-25.65809 -5.28904,-35.41062c-0.31272,-4.08028 0.31878,-13.47189 -0.44075,-17.50181c-0.3116,-1.65332 -0.86693,-1.24995 -0.8815,1.62808c-0.03117,6.15925 1.32224,11.39652 1.32224,17.50181c0,6.91931 0.57971,16.71994 2.20378,28.49131c1.85928,13.47599 3.31214,26.64053 6.17051,38.25976c2.56294,10.41829 5.3712,17.56462 9.25581,22.38603c2.23248,2.77086 4.48188,3.53831 6.17056,4.4772c3.2482,1.80598 5.78874,3.31672 7.93355,2.84914c0.95919,-0.20909 2.28114,-2.02918 2.64449,-6.51231c0.56022,-6.91193 0.74553,-15.07257 1.76304,-23.60707c0.77773,-6.52357 2.22068,-13.01009 2.20376,-18.72286c-0.01569,-5.30685 0.15535,-11.0007 -1.76304,-10.58249c-0.42897,0.0935 0.22372,1.24032 0.8815,6.51231c0.66353,5.3183 0.24398,12.29111 1.76304,20.35092c1.24644,6.61331 3.69652,13.80512 4.84829,14.24566c0.40716,0.15575 0.97868,-0.74536 2.64449,-2.84912c3.75199,-4.73847 7.0628,-8.8009 8.81504,-13.83865c1.7983,-5.17015 2.41061,-11.02247 4.40752,-22.38603c0.78934,-4.49185 1.32227,-7.32634 1.32227,-8.95441c0,-0.81404 0.38351,0.00345 0.44077,0.40701c1.77808,12.53013 5.46248,20.77408 6.17051,28.89833c0.64035,7.34767 1.44487,13.4106 2.20376,17.5018c0.5262,2.83675 0.56987,3.54397 0.88154,3.25616c1.24662,-1.15123 0.12421,-3.25763 0,-7.73335c-0.44091,-15.88937 -2.68071,-31.4066 -1.32227,-38.25975c0.98165,-4.95227 2.24693,-8.06892 3.08526,-8.5474c0.37496,-0.21399 1.34499,1.20617 3.52603,4.07018c4.00878,5.26418 6.14577,8.00489 7.05205,10.98951c0.84148,2.77118 1.80662,6.35981 2.64449,9.36143c1.10563,3.96101 0.68256,5.19762 1.32227,6.91932c0.72939,1.96306 1.32227,4.07018 1.76304,6.10528c0.44072,2.03509 1.81892,5.94948 4.40752,8.95442c1.16417,1.35137 3.21687,4.73047 8.81504,7.32634c1.62401,0.75307 3.52685,0.40761 4.84829,-1.22106c2.25805,-2.78303 1.91158,-7.14043 3.96675,-11.80354c2.30826,-5.23732 7.58502,-13.6535 11.0188,-17.90883c5.22755,-6.47823 8.96528,-9.32843 11.90035,-10.98951c2.86194,-1.61969 6.19695,-2.43294 9.69654,-2.03509c3.60729,0.4101 7.84871,-0.14568 9.69654,2.44213c0.24261,0.3398 0.05392,-0.4339 -0.44072,-1.22106c-1.59529,-2.53856 -7.5076,-9.12432 -11.90035,-10.17547c-1.70665,-0.40839 -6.06848,2.13213 -9.69654,5.29124c-3.86147,3.36235 -8.135,7.26299 -9.69654,11.80356c-1.52111,4.42303 -2.16393,9.7612 -0.88154,15.87372c1.36471,6.50484 2.6915,13.23329 6.61133,18.72286c5.14697,7.20815 12.26095,7.48631 14.10406,6.10528c2.46805,-1.84931 3.66501,-6.88651 5.28902,-13.0246c1.92895,-7.29061 4.18512,-15.39489 4.84829,-23.20006c0.65503,-7.70966 -0.6607,-13.41261 -0.8815,-16.68777c-0.13692,-2.03116 0.14122,-2.85965 0,-3.66317c-0.22327,-1.27049 -0.44077,-0.81404 0,0.40702c0.8815,2.44211 2.13717,5.3102 3.52603,9.36142c1.68268,4.90833 2.43444,10.56195 3.08526,17.90883c0.6837,7.71828 -1.94615,28.59072 -3.52603,31.74746c-5.71136,11.41166 -13.12968,19.22188 -21.15611,26.0492c-8.3032,7.06272 -18.5275,12.56733 -29.08966,17.09478c-23.02141,9.86809 -38.69519,11.44247 -56.41633,14.24564c-18.43114,2.91549 -36.50337,5.33891 -78.89471,11.39652c-18.47962,2.64068 -38.26327,4.78682 -76.2502,8.14039c-17.59935,1.55371 -34.3787,2.44211 -52.44954,2.44211c-18.07086,0 -35.68695,-0.96383 -44.95677,-1.62808c-44.02218,-3.15448 -69.69715,-5.37966 -83.74299,-7.73335c-12.8428,-2.1521 -24.21703,-4.62467 -35.2602,-6.10528c-10.11711,-1.35644 -18.51161,-1.62808 -24.68215,-2.03509l-4.40752,0l-2.20376,0.40701l-0.88151,0"/>
                </svg>
                {/* <div className="loader-wrapper center">
                    <div className="loader">Loading...</div>
                </div> */}
            </div>
        );
    }
    else if (render === "gone_wrong"){
        return(
            <div className="center">
                <p className="api-error">Something went wrong</p>
            </div>
        );
    }
    else if (render === "result"){
        return (
            <div>
                {apiState.apiOutput}
            </div>
        );
    }
    else if (render === "error"){
        return (
            <div>
                {apiState.apiStderr}
            </div>
        );
    }
}